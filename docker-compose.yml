version: '3.5'

services:
  web-mvc:
    container_name: web-mvc-eshop
    build:
      context: .
      dockerfile: WebMvc/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq
      - catalog-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Pass@word1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/Cert/localhost.pfx
      - EventBusConnection=rabbitmq-eshop
      - EventBusUserName=admin
      - EventBusPassword=Pass@word1
      - SubscriptionClientName=WebMVC
      - CERTIFICATE_PATH=/app/Cert #C:/tmp
      - BasketUrl=https://basket-api #https://localhost:44376 #
      - CatalogUrl=https://catalog-api #Https://localhost:44323 #
      - PurchaseUrl=https://shopping-gateway #https://localhost:44373 #
      - ASPNETCORE_HTTPS_PORT=44384
      - ASPNETCORE_URLS=https://+443;http://+80
      - IdentityUrl=https://6f4dc2a9b45d.ngrok.io #https://identity-api #use ngrok to generate url https://dashboard.ngrok.com/get-started - ngrok http https://localhost:54010
      - MvcClient=https://web-mvc/
      - Serilog.SeqServerUrl=http://seq/
      - CatalogUrlHC=http://catalog-api/hc
      - OrderingUrlHC=http://ordering-api/hc
      - IdentityUrlHC=http://identity-api/hc     #Local: Use ${ESHOP_PROD_EXTERNAL_DNS_NAME_OR_IP}, if using external IP or DNS name from browser.
      - BasketUrlHC=http://basket-api/hc
      - MarketingUrlHC=http://marketing-api/hc
      - PaymentUrlHC=http://payment-api/hc
    ports:
      - "44384:443"
      - "44385:80"
  shopping-gateway:
    container_name: shopping-gateway-eshop
    build:
      context: .
      dockerfile: Shopping.Gateway/Dockerfile
    networks:
      - playground_default
    depends_on:
      - sqlserver
      - identity-api
      - rabbitmq
      - catalog-api
      - basket-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString=server=sqlserver-eshop;user id=sa;password=Pass@word123;database=Microsoft.eShopOnContainers.Services.CatalogDb;
      - PicBaseUrl=https://localhost:44323/api/v1/catalog/items/[0]/pic/  #Local: You need to open your local dev-machine firewall at range 5100-5110.
      - EventBusConnection=rabbitmq-eshop
      - EventBusUserName=admin
      - EventBusPassword=Pass@word1
      - AzureStorageAccountName=
      - AzureStorageAccountKey=
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=
      - GRPC_PORT=81
      - PORT=80
      - PATH_BASE=/catalog-api
      - ASPNETCORE_HTTPS_PORT=44323
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Pass@word1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/Cert/localhost.pfx
      - CERTIFICATE_PATH=/app/Cert #C:/tmp
      - Serilog__SeqServerUrl=http://seq/
      - urls__basket=http://basket-api
      - urls__catalog=http://catalog-api
      - urls__orders=http://ordering-api
      - urls__identity=http://identity-api
      - urls__grpcBasket=https://basket-api
      - urls__grpcCatalog=https://catalog-api
      - urls__grpcOrdering=https://ordering-api
      - Logging__LogLevel__Grpc=Information
    ports:
      - "5203:80"
      - "5204:443"
  catalog-api:
    container_name: catalog-api-eshop
    build:
      context: .
      dockerfile: Catalog.Api/Dockerfile
    networks:
      - playground_default
    depends_on:
      - sqlserver
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString=server=sqlserver-eshop;user id=sa;password=Pass@word123;database=Microsoft.eShopOnContainers.Services.CatalogDb;
      - PicBaseUrl=https://localhost:44323/api/v1/catalog/items/[0]/pic/  #Local: You need to open your local dev-machine firewall at range 5100-5110.
      - EventBusConnection=rabbitmq-eshop
      - EventBusUserName=admin
      - EventBusPassword=Pass@word1
      - AzureStorageAccountName=
      - AzureStorageAccountKey=
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=
      - GRPC_PORT=81
      - PORT=80
      - PATH_BASE=/catalog-api
      - ASPNETCORE_HTTPS_PORT=44323
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Pass@word1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/Cert/localhost.pfx
      - CERTIFICATE_PATH=/app/Cert #C:/tmp
      - Serilog__SeqServerUrl=http://seq/
    ports:
      - "44322:80"
      - "44323:443"
  basket-api:
    container_name: basket-api-eshop
    build:
      context: .
      dockerfile: Basket.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTPS_PORT=44376
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Pass@word1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/Cert/localhost.pfx
      - CERTIFICATE_PATH=/app/Cert #C:/tmp
      - EventBusConnection=rabbitmq-eshop
      - EventBusUserName=admin
      - EventBusPassword=Pass@word1
      - SubscriptionClientName=Basket
      - Serilog__SeqServerUrl=http://seq/
      - ConnectionString=redis:6379,password=Pass@word1
      - IdentityUrl=https://6f4dc2a9b45d.ngrok.io #https://identity-api #use ngrok to generate url https://dashboard.ngrok.com/get-started - ngrok http https://localhost:54010
      - IdentityUrlExternal=https://6f4dc2a9b45d.ngrok.io #https://identity-api #use ngrok to generate url https://dashboard.ngrok.com/get-started - ngrok http https://localhost:54010
    ports:
      - "44375:80"
      - "44376:443"
  identity-api:
    container_name: identity-api-eshop
    build:
      context: .
      dockerfile: Identity.Api/Dockerfile
    depends_on:
      - sqlserver
    environment:
      - ConnectionString=server=sqlserver-eshop;user id=sa;password=Pass@word123;database=Microsoft.eShopOnContainers.Services.CatalogDb;
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTPS_PORT=54010
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Pass@word1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/Cert/localhost.pfx
      - CERTIFICATE_PATH=/app/Cert #C:/tmp
      - MvcClient=https://localhost:44384
      - Serilog__SeqServerUrl=http://seq/
      - EventBusConnection=rabbitmq-eshop
      - EventBusUserName=admin
      - EventBusPassword=Pass@word1
      - SubscriptionClientName=IdentityApi
    ports:
      - "54010:443"
      - "54011:80"
  ordering-api:
    container_name: ordering-api-eshop
    build:
      context: .
      dockerfile: Ordering.Api/Dockerfile
    networks:
      - playground_default
    depends_on:
      - sqlserver
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString=server=sqlserver-eshop;user id=sa;password=Pass@word123;database=Microsoft.eShopOnContainers.Services.CatalogDb;
      - PicBaseUrl=https://localhost:44323/api/v1/catalog/items/[0]/pic/  #Local: You need to open your local dev-machine firewall at range 5100-5110.
      - EventBusConnection=rabbitmq-eshop
      - EventBusUserName=admin
      - EventBusPassword=Pass@word1
      - AzureStorageAccountName=
      - AzureStorageAccountKey=
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=
      - OrchestratorType=
      - GRPC_PORT=81
      - PORT=80
      - PATH_BASE=/catalog-api
      - ASPNETCORE_HTTPS_PORT=44323
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Pass@word1
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/Cert/localhost.pfx
      - CERTIFICATE_PATH=/app/Cert #C:/tmp
      - Serilog__SeqServerUrl=http://seq/
    ports:
      - "44275:80"
      - "44276:443"
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-eshop
    networks:
      - playground_default
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq-eshop
    ports:
      - "15672:15672" #Http
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Pass@word1
  sqlserver:
    image: microsoft/mssql-server-linux:latest
    container_name: sqlserver-eshop
    volumes:
      - sqlserverdata:/var/opt/sqlserver-eshop
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pass@word123
  seq:
    image: datalust/seq:latest
    container_name: seq-eshop
    volumes:
      - seqdata:/var/opt/seqdata-eshop
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5340:80"
      - "5341:5341"
  redis:
    container_name: redis-eshop
    image: "redis:alpine"
    command: redis-server --requirepass Pass@word1
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
#    networks:
#      node_net:
#        ipv4_address: 172.28.1.4
volumes:
  sqlserverdata:
    external: true
  rabbitmqdata:
    external: true
  seqdata:
      external: true
networks:
  playground_default:
    name: playground_default
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16